// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace RenderFlatBuffer
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Model : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static Model GetRootAsModel(ByteBuffer _bb) { return GetRootAsModel(_bb, new Model()); }
  public static Model GetRootAsModel(ByteBuffer _bb, Model obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Model __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Type { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTypeBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetTypeBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetTypeArray() { return __p.__vector_as_array<byte>(4); }
  public int MaterialID { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public RenderFlatBuffer.Geo? Geo { get { int o = __p.__offset(8); return o != 0 ? (RenderFlatBuffer.Geo?)(new RenderFlatBuffer.Geo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<RenderFlatBuffer.Model> CreateModel(FlatBufferBuilder builder,
      StringOffset TypeOffset = default(StringOffset),
      int MaterialID = 0,
      Offset<RenderFlatBuffer.Geo> GeoOffset = default(Offset<RenderFlatBuffer.Geo>)) {
    builder.StartTable(3);
    Model.AddGeo(builder, GeoOffset);
    Model.AddMaterialID(builder, MaterialID);
    Model.AddType(builder, TypeOffset);
    return Model.EndModel(builder);
  }

  public static void StartModel(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddType(FlatBufferBuilder builder, StringOffset typeOffset) { builder.AddOffset(0, typeOffset.Value, 0); }
  public static void AddMaterialID(FlatBufferBuilder builder, int materialID) { builder.AddInt(1, materialID, 0); }
  public static void AddGeo(FlatBufferBuilder builder, Offset<RenderFlatBuffer.Geo> geoOffset) { builder.AddOffset(2, geoOffset.Value, 0); }
  public static Offset<RenderFlatBuffer.Model> EndModel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<RenderFlatBuffer.Model>(o);
  }
}


static public class ModelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Type*/, false)
      && verifier.VerifyField(tablePos, 6 /*MaterialID*/, 4 /*int*/, 4, false)
      && verifier.VerifyTable(tablePos, 8 /*Geo*/, RenderFlatBuffer.GeoVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
