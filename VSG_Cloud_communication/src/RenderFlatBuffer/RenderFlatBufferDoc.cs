// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace RenderFlatBuffer
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct RenderFlatBufferDoc : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static RenderFlatBufferDoc GetRootAsRenderFlatBufferDoc(ByteBuffer _bb) { return GetRootAsRenderFlatBufferDoc(_bb, new RenderFlatBufferDoc()); }
  public static RenderFlatBufferDoc GetRootAsRenderFlatBufferDoc(ByteBuffer _bb, RenderFlatBufferDoc obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyRenderFlatBufferDoc(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, RenderFlatBufferDocVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RenderFlatBufferDoc __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public RenderFlatBuffer.Instance? Bom(int j) { int o = __p.__offset(4); return o != 0 ? (RenderFlatBuffer.Instance?)(new RenderFlatBuffer.Instance()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int BomLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public RenderFlatBuffer.Material? MaterialData(int j) { int o = __p.__offset(6); return o != 0 ? (RenderFlatBuffer.Material?)(new RenderFlatBuffer.Material()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MaterialDataLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public RenderFlatBuffer.Proto? ProtoData(int j) { int o = __p.__offset(8); return o != 0 ? (RenderFlatBuffer.Proto?)(new RenderFlatBuffer.Proto()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ProtoDataLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<RenderFlatBuffer.RenderFlatBufferDoc> CreateRenderFlatBufferDoc(FlatBufferBuilder builder,
      VectorOffset BomOffset = default(VectorOffset),
      VectorOffset MaterialDataOffset = default(VectorOffset),
      VectorOffset ProtoDataOffset = default(VectorOffset)) {
    builder.StartTable(3);
    RenderFlatBufferDoc.AddProtoData(builder, ProtoDataOffset);
    RenderFlatBufferDoc.AddMaterialData(builder, MaterialDataOffset);
    RenderFlatBufferDoc.AddBom(builder, BomOffset);
    return RenderFlatBufferDoc.EndRenderFlatBufferDoc(builder);
  }

  public static void StartRenderFlatBufferDoc(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddBom(FlatBufferBuilder builder, VectorOffset bomOffset) { builder.AddOffset(0, bomOffset.Value, 0); }
  public static VectorOffset CreateBomVector(FlatBufferBuilder builder, Offset<RenderFlatBuffer.Instance>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateBomVectorBlock(FlatBufferBuilder builder, Offset<RenderFlatBuffer.Instance>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBomVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<RenderFlatBuffer.Instance>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateBomVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<RenderFlatBuffer.Instance>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartBomVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMaterialData(FlatBufferBuilder builder, VectorOffset materialDataOffset) { builder.AddOffset(1, materialDataOffset.Value, 0); }
  public static VectorOffset CreateMaterialDataVector(FlatBufferBuilder builder, Offset<RenderFlatBuffer.Material>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMaterialDataVectorBlock(FlatBufferBuilder builder, Offset<RenderFlatBuffer.Material>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMaterialDataVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<RenderFlatBuffer.Material>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMaterialDataVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<RenderFlatBuffer.Material>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMaterialDataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddProtoData(FlatBufferBuilder builder, VectorOffset protoDataOffset) { builder.AddOffset(2, protoDataOffset.Value, 0); }
  public static VectorOffset CreateProtoDataVector(FlatBufferBuilder builder, Offset<RenderFlatBuffer.Proto>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateProtoDataVectorBlock(FlatBufferBuilder builder, Offset<RenderFlatBuffer.Proto>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateProtoDataVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<RenderFlatBuffer.Proto>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateProtoDataVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<RenderFlatBuffer.Proto>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartProtoDataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<RenderFlatBuffer.RenderFlatBufferDoc> EndRenderFlatBufferDoc(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<RenderFlatBuffer.RenderFlatBufferDoc>(o);
  }
  public static void FinishRenderFlatBufferDocBuffer(FlatBufferBuilder builder, Offset<RenderFlatBuffer.RenderFlatBufferDoc> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedRenderFlatBufferDocBuffer(FlatBufferBuilder builder, Offset<RenderFlatBuffer.RenderFlatBufferDoc> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class RenderFlatBufferDocVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyVectorOfTables(tablePos, 4 /*Bom*/, RenderFlatBuffer.InstanceVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 6 /*MaterialData*/, RenderFlatBuffer.MaterialVerify.Verify, false)
      && verifier.VerifyVectorOfTables(tablePos, 8 /*ProtoData*/, RenderFlatBuffer.ProtoVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
